{
  "openapi": "3.0.0",
  "info": {
    "title": "Parallel API",
    "description": "REST API for Parallel application.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "User",
      "description": "User"
    },
    {
      "name": "Channel",
      "description": "Channel"
    },
    {
      "name": "Block",
      "description": "Block"
    },
    {
      "name": "Follow",
      "description": "Follow"
    },
    {
      "name": "Connection",
      "description": "Connection"
    },
    {
      "name": "Feed",
      "description": "Feed"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Development server"
    },
    {
      "url": "api.para-llel.app/api/v1",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "description": "Cookie session",
        "in": "cookie",
        "name": "sid.cookie"
      }
    },
    "schemas": {
      "Block": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "unique_id": {
            "type": "string",
            "example": "abc123"
          },
          "user": {
            "type": "integer",
            "format": "int64",
            "example": 7
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": []
          },
          "title": {
            "type": "string",
            "example": "Test Block 1"
          },
          "description": {
            "type": "string",
            "example": "example description"
          },
          "source_url": {
            "type": "string",
            "example": "source.com"
          },
          "image_url": {
            "type": "string",
            "example": "image.jpg"
          },
          "date_created": {
            "type": "string",
            "format": "date",
            "example": "2020-01-01T17:00:00.000Z"
          },
          "date_updated": {
            "type": "string",
            "format": "date",
            "example": "2020-01-01T17:00:00.000Z"
          }
        },
        "xml": {
          "name": "block"
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "user": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "object"
              }
            ],
            "example": 2
          },
          "title": {
            "type": "string",
            "example": "Test Channel 1"
          },
          "description": {
            "type": "string",
            "example": "example description"
          },
          "slug": {
            "type": "string",
            "example": "test-channel-1"
          },
          "follower_count": {
            "type": "integer",
            "format": "int64",
            "example": 5
          },
          "date_created": {
            "type": "string",
            "format": "date",
            "example": "2020-01-01T17:00:00.000Z"
          },
          "date_updated": {
            "type": "string",
            "format": "date",
            "example": "2020-01-01T17:00:00.000Z"
          }
        },
        "xml": {
          "name": "channel"
        }
      },
      "ChannelsUserFollows": {
        "type": "object",
        "properties": {
          "user": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "followed_channel": {
            "$ref": "#/components/schemas/Channel"
          },
          "date_created": {
            "type": "string",
            "format": "date",
            "example": "2020-01-01T17:00:00.000Z"
          }
        },
        "xml": {
          "name": "channelsuserfollows"
        }
      },
      "ChannelFollowers": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "followed_channel": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "date_created": {
            "type": "string",
            "format": "date",
            "example": "2022-06-14T17:00:00.000Z"
          }
        },
        "xml": {
          "name": "channelfollowers"
        }
      },
      "UserFollowers": {
        "type": "object",
        "properties": {
          "following_user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "example": {
              "id": 20,
              "slug": "following-user",
              "first_name": "following",
              "last_name": "user",
              "full_name": "Following User",
              "email": "following@email.com",
              "avatar": "image.jpg",
              "following_count": 1,
              "follower_count": 1,
              "role": "user",
              "enabled": true,
              "locked": false
            }
          },
          "followed_user": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "date_created": {
            "type": "string",
            "format": "date",
            "example": "2023-02-12T17:00:00.000Z"
          }
        },
        "xml": {
          "name": "userfollowers"
        }
      },
      "UserFollowing": {
        "type": "object",
        "properties": {
          "following_user": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "followed_user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "example": {
              "id": 20,
              "slug": "followed-user",
              "first_name": "followed",
              "last_name": "user",
              "full_name": "Followed User",
              "email": "followed@email.com",
              "avatar": "image.jpg",
              "following_count": 2,
              "follower_count": 2,
              "role": "user",
              "enabled": true,
              "locked": false
            }
          },
          "date_created": {
            "type": "string",
            "format": "date",
            "example": "2019-04-15T17:00:00.000Z"
          }
        },
        "xml": {
          "name": "userfollowing"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "slug": {
            "type": "string",
            "example": "test-user-1"
          },
          "first_name": {
            "type": "string",
            "example": "Test"
          },
          "last_name": {
            "type": "string",
            "example": "User 1"
          },
          "full_name": {
            "type": "string",
            "example": "Test User 1"
          },
          "email": {
            "type": "string",
            "example": "test@email.com"
          },
          "avatar": {
            "type": "string",
            "example": "image.jpg"
          },
          "following_count": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "follower_count": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "locked": {
            "type": "boolean",
            "example": false
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "ServerError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "example": "500"
              }
            }
          },
          "message": {
            "type": "string",
            "example": "Server error"
          }
        }
      },
      "Feed": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "slug": {
                "type": "string",
                "example": "test-user-1"
              },
              "first_name": {
                "type": "string",
                "example": "Test"
              },
              "last_name": {
                "type": "string",
                "example": "User 1"
              },
              "full_name": {
                "type": "string",
                "example": "Test User 1"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date",
            "example": "2020-01-01T17:00:00.000Z"
          },
          "data_type": {
            "type": "string",
            "example": "Block"
          },
          "action_type": {
            "type": "string",
            "example": "Connected"
          },
          "data": {
            "type": "object"
          }
        },
        "xml": {
          "name": "feed"
        }
      },
      "ChannelPageResults": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "last_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "example": null
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "channel": {
                  "$ref": "#/components/schemas/Channel"
                },
                "blocks": {
                  "example": []
                },
                "total_blocks": {
                  "example": 0
                }
              }
            }
          }
        },
        "xml": {
          "name": "channel"
        }
      }
    }
  },
  "paths": {
    "/channels/{id}/add": {
      "post": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Block"
        ],
        "summary": "Create block",
        "description": "Create block",
        "operationId": "createBlock",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of channel to create block in",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return newly created block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{id}/": {
      "delete": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Block"
        ],
        "summary": "Delete block",
        "description": "Delete block",
        "operationId": "deleteBlock",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of block to delete",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Block has been deleted."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/blocks": {
      "get": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Block"
        ],
        "summary": "Get all blocks",
        "description": "Returns all blocks",
        "operationId": "getAllBlock",
        "responses": {
          "200": {
            "description": "Return all blocks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Block"
                  },
                  "example": [
                    {
                      "id": 5,
                      "unique_id": "abc123",
                      "user": 4,
                      "title": "Block 5",
                      "description": "example description",
                      "source_url": "source.com",
                      "image_url": "image.jpg",
                      "date_created": "2020-01-01T17:00:00.000Z",
                      "date_updated": "2020-01-01T17:00:00.000Z"
                    },
                    {
                      "id": 8,
                      "unique_id": "abc567",
                      "user": 6,
                      "title": "Block 8",
                      "description": "example description",
                      "source_url": "source.com",
                      "image_url": "image.jpg",
                      "date_created": "2021-05-15T17:00:00.000Z",
                      "date_updated": "2021-05-15T17:00:00.000Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Block not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No blocks found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/blocks": {
      "get": {
        "tags": [
          "Block"
        ],
        "summary": "Find all blocks By user ID",
        "description": "Returns all user blocks",
        "operationId": "getAllBlocksByUserID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of user to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all user blocks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Block"
                  },
                  "example": [
                    {
                      "id": 1,
                      "unique_id": "abc123",
                      "user": 2,
                      "title": "Block 1",
                      "description": "example description",
                      "source_url": "source.com",
                      "image_url": "image.jpg",
                      "date_created": "2020-01-01T17:00:00.000Z",
                      "date_updated": "2020-01-01T17:00:00.000Z"
                    },
                    {
                      "id": 2,
                      "unique_id": "abc567",
                      "user": 2,
                      "title": "Block 2",
                      "description": "example description",
                      "source_url": "source.com",
                      "image_url": "image.jpg",
                      "date_created": "2021-05-15T17:00:00.000Z",
                      "date_updated": "2021-05-15T17:00:00.000Z"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Blocks not found from particular user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User with id [id] has no blocks."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{id}": {
      "get": {
        "tags": [
          "Block"
        ],
        "summary": "Find block By ID",
        "description": "Returns a single block",
        "operationId": "getBlockByID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of block to return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return block",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Block"
                    },
                    {
                      "type": "object",
                      "required": [
                        "channels"
                      ],
                      "properties": {
                        "channels": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "$ref": "#/components/schemas/Channel"
                              }
                            ]
                          },
                          "example": [
                            {
                              "id": 2,
                              "user": {
                                "id": 1,
                                "slug": "first-user",
                                "first_name": "First",
                                "last_name": "User",
                                "full_name": "First User"
                              },
                              "title": "Channel 2",
                              "description": "example description",
                              "slug": "channel-2",
                              "follower_count": 6,
                              "date_created": "2020-02-01T17:00:00.000Z",
                              "date_updated": "2020-02-01T17:00:00.000Z"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Block not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No blocks found with that id [id]."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/search/blocks": {
      "get": {
        "tags": [
          "Block"
        ],
        "summary": "Search blocks based on query",
        "description": "Returns relevant blocks",
        "operationId": "searchBlockByTitle",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string"
            },
            "description": "Keyword to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all relevant blocks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Block"
                      },
                      {
                        "type": "object",
                        "required": [
                          "channels"
                        ],
                        "properties": {
                          "channels": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "$ref": "#/components/schemas/Channel"
                                }
                              ]
                            },
                            "example": [
                              {
                                "id": 2,
                                "user": {
                                  "id": 1,
                                  "slug": "first-user",
                                  "first_name": "First",
                                  "last_name": "User",
                                  "full_name": "First User"
                                },
                                "title": "Channel 2",
                                "description": "example description",
                                "slug": "channel-2",
                                "follower_count": 6,
                                "date_created": "2020-02-01T17:00:00.000Z",
                                "date_updated": "2020-02-01T17:00:00.000Z"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Blocks not found with particular keyword",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No blocks found with that that title."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{id}/update": {
      "put": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Block"
        ],
        "summary": "Update Block",
        "description": "Update block",
        "operationId": "updateBlock",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of block to update",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return update success message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Block has been updated."
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/channels": {
      "post": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Create channel",
        "description": "Create channel",
        "operationId": "createChannel",
        "responses": {
          "201": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Channel has been created."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Get all channels",
        "description": "Returns all channels",
        "operationId": "getAllChannels",
        "responses": {
          "200": {
            "description": "Return all channels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Channel"
                  },
                  "example": [
                    {
                      "id": 1,
                      "user": 2,
                      "title": "Channel 1",
                      "description": "example description",
                      "slug": "channel-1",
                      "follower_count": 2,
                      "date_created": "2020-01-01T17:00:00.000Z",
                      "date_updated": "2020-01-01T17:00:00.000Z"
                    },
                    {
                      "id": 2,
                      "user": {
                        "id": 1,
                        "slug": "first-user",
                        "first_name": "First",
                        "last_name": "User",
                        "full_name": "First User"
                      },
                      "title": "Channel 2",
                      "description": "example description",
                      "slug": "channel-2",
                      "follower_count": 6,
                      "date_created": "2020-02-01T17:00:00.000Z",
                      "date_updated": "2020-02-01T17:00:00.000Z"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No channels found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{id}": {
      "delete": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Delete channel",
        "description": "Delete channel",
        "operationId": "deleteChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of channel to delete",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Channel has been deleted."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Find channel By ID",
        "description": "Returns a single channel",
        "operationId": "getChannelByID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of channel to return",
            "required": true
          },
          {
            "in": "query",
            "name": "last_id",
            "schema": {
              "type": "string"
            },
            "description": "Last block id for pagination",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            },
            "description": "Limit number of blocks",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Return channel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "format": "int64",
                      "example": 0
                    },
                    "last_id": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "example": null
                    },
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Channel"
                        },
                        {
                          "type": "object",
                          "required": [
                            "block"
                          ],
                          "properties": {
                            "block": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 0
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No channels found with that [id]."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/channels": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Find all channels By user ID",
        "description": "Returns all user channels",
        "operationId": "getAllChannelsByUserID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of user to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all user channels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChannelPageResults"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Channels not found from particular user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User with id [id] has no channels."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{slug}/following": {
      "get": {
        "tags": [
          "Follow"
        ],
        "summary": "Find all channels that user follows by user slug",
        "description": "Returns all channels user follows",
        "operationId": "getAllChannelsUserFollows",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "slug of user to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all channels user follows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChannelsUserFollows"
                  },
                  "example": [
                    {
                      "user": 2,
                      "followed_channel": {
                        "id": 2,
                        "user": 1,
                        "title": "Channel 2",
                        "description": "example description",
                        "slug": "channel-2",
                        "follower_count": 2,
                        "date_created": "2020-01-01T17:00:00.000Z",
                        "date_updated": "2020-01-01T17:00:00.000Z"
                      },
                      "date_created": "2022-01-01T17:00:00.000Z"
                    },
                    {
                      "user": 2,
                      "followed_channel": {
                        "id": 1,
                        "user": 6,
                        "title": "Chann3l 6",
                        "description": "example description",
                        "slug": "channel-6",
                        "follower_count": 10,
                        "date_created": "2020-01-01T17:00:00.000Z",
                        "date_updated": "2020-01-01T17:00:00.000Z"
                      },
                      "date_created": "2022-01-02T17:00:00.000Z"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not following any channels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User not following any channels."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/channels/title/{slug}": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Find channel By slug",
        "description": "Returns a single channel",
        "operationId": "getChannelBySlug",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "slug of channel to return",
            "required": true
          },
          {
            "in": "query",
            "name": "last_id",
            "schema": {
              "type": "string"
            },
            "description": "Last block id for pagination",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            },
            "description": "Limit number of blocks",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Return channel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "format": "int64",
                      "example": 0
                    },
                    "last_id": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "example": null
                    },
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Channel"
                        },
                        {
                          "type": "object",
                          "required": [
                            "block"
                          ],
                          "properties": {
                            "block": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 0
                            },
                            "user": {
                              "type": "object",
                              "example": {
                                "id": 1,
                                "slug": "first-user",
                                "full_name": "First User"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Channel with title [slug] was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{slug}/followers": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Find all user that user follows channel by channel slug",
        "description": "Returns all user following particular channel",
        "operationId": "getChannelFollowers",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "slug of channel to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all users following channel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChannelFollowers"
                  },
                  "example": [
                    {
                      "user": {
                        "id": 1,
                        "slug": "first-user",
                        "first_name": "first",
                        "last_name": "user",
                        "full_name": "First User",
                        "email": "first@email.com",
                        "avatar": "image.jpg",
                        "following_count": 5,
                        "follower_count": 1,
                        "role": "user",
                        "enabled": true,
                        "locked": false
                      },
                      "followed_channel": 5,
                      "date_created": "2022-01-02T17:00:00.000Z"
                    },
                    {
                      "user": {
                        "id": 2,
                        "slug": "second-user",
                        "first_name": "second",
                        "last_name": "user",
                        "full_name": "Second User",
                        "email": "second@email.com",
                        "avatar": "image.jpg",
                        "following_count": 2,
                        "follower_count": 2,
                        "role": "user",
                        "enabled": true,
                        "locked": false
                      },
                      "followed_channel": 5,
                      "date_created": "2022-01-03T17:00:00.000Z"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No channel found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No channel was found with that slug."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/search/channels": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Search channels based on query",
        "description": "Returns relevant channels",
        "operationId": "searchChannelByTitle",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string"
            },
            "description": "Keyword to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all relevant channels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Channel"
                  },
                  "example": [
                    {
                      "id": 3,
                      "user": {
                        "id": 1,
                        "slug": "first-user",
                        "first_name": "First",
                        "last_name": "User",
                        "full_name": "First User"
                      },
                      "title": "Channel 3",
                      "description": "example description",
                      "slug": "channel-3",
                      "follower_count": 0,
                      "date_created": "2020-02-01T17:00:00.000Z",
                      "date_updated": "2020-02-01T17:00:00.000Z"
                    },
                    {
                      "id": 2,
                      "user": {
                        "id": 1,
                        "slug": "first-user",
                        "first_name": "First",
                        "last_name": "User",
                        "full_name": "First User"
                      },
                      "title": "Channel 2",
                      "description": "example description",
                      "slug": "channel-2",
                      "follower_count": 6,
                      "date_created": "2020-02-01T17:00:00.000Z",
                      "date_updated": "2020-02-01T17:00:00.000Z"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Channels not found with particular keyword",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No channels found with that that title."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{id}/update": {
      "put": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Channel"
        ],
        "summary": "Update Channel",
        "description": "Update channel",
        "operationId": "updateChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of channel to update",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return update success message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Channel has been updated."
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{id}/connect": {
      "post": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Connection"
        ],
        "summary": "Connect block to channel",
        "description": "Connect block to channel",
        "operationId": "addConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of block to connect",
            "required": true
          },
          {
            "in": "query",
            "name": "channel",
            "schema": {
              "type": "string"
            },
            "description": "Keyword to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Missing channel query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing channel."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{id}/disconnect": {
      "delete": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Connection"
        ],
        "summary": "Disconnect block to channel",
        "description": "Disconnect block to channel",
        "operationId": "removeConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of block to connect",
            "required": true
          },
          {
            "in": "query",
            "name": "channel",
            "schema": {
              "type": "string"
            },
            "description": "Keyword to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Block has been disconnected from the channel."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Missing channel query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing channel."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/feed": {
      "get": {
        "tags": [
          "Feed"
        ],
        "summary": "Get default feed",
        "description": "Returns an array of feed items",
        "operationId": "getDefaultFeed",
        "parameters": [
          {
            "in": "query",
            "name": "channel_lastID",
            "schema": {
              "type": "string"
            },
            "description": "Last channel id for pagination",
            "required": false
          },
          {
            "in": "query",
            "name": "block_lastID",
            "schema": {
              "type": "string"
            },
            "description": "Last block id for pagination",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            },
            "description": "Limit number of results to return",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Return feed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "format": "int64",
                      "example": 2
                    },
                    "channel_total": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1
                    },
                    "block_total": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1
                    },
                    "channel_lastID": {
                      "type": "object",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        }
                      ],
                      "example": null
                    },
                    "block_lastID": {
                      "type": "object",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        }
                      ],
                      "example": null
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Block"
                          },
                          {
                            "type": "object",
                            "required": [
                              "channels"
                            ],
                            "properties": {
                              "channels": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "$ref": "#/components/schemas/Channel"
                                    }
                                  ]
                                },
                                "example": [
                                  {
                                    "id": 2,
                                    "user": {
                                      "id": 1,
                                      "slug": "first-user",
                                      "first_name": "First",
                                      "last_name": "User",
                                      "full_name": "First User"
                                    },
                                    "title": "Channel 2",
                                    "description": "example description",
                                    "slug": "channel-2",
                                    "follower_count": 6,
                                    "date_created": "2020-02-01T17:00:00.000Z",
                                    "date_updated": "2020-02-01T17:00:00.000Z"
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Feed could not be generated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Feed could not be generated."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/follow/channel/{id}": {
      "post": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Follow"
        ],
        "summary": "Follow channel",
        "description": "Logged in user follows channel",
        "operationId": "followChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of channel to follow",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Following channel with id [id]."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Missing channel id to follow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing channel to follow."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/unfollow/channel/{id}": {
      "delete": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Follow"
        ],
        "summary": "Unfollow channel",
        "description": "Logged in user unfollows channel",
        "operationId": "unfollowChannel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of channel to unfollow",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Channel with id [id] has been unfollowed."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Missing channel id to unfollow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing channel to unfollow."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/follow/user/{id}": {
      "post": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Follow"
        ],
        "summary": "Follow user",
        "description": "Logged in user follows other user",
        "operationId": "addFriend",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of user to follow",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Following user with id [followID]."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Missing user id to follow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing user to follow."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/unfollow/user/{id}": {
      "delete": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Follow"
        ],
        "summary": "Unfollow user",
        "description": "Logged in user unfollows other user",
        "operationId": "removeFriend",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of user to unfollow",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unfollowed user with id [id]."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Missing user id to unfollow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing user to unfollow."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/registration/check": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Validate user token",
        "description": "Validate user token",
        "operationId": "checkToken",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "description": "Token to verify",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Expired token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 423
                        }
                      }
                    },
                    "success": {
                      "type": "string",
                      "example": "Expired token."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/registration/confirm": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Confirm user token",
        "description": "Confirm user token",
        "operationId": "confirmToken",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "description": "Token to verify",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User has successfully registered, redirect to completion page.",
            "headers": {
              "Location": {
                "description": "URI of success registration.",
                "schema": {
                  "type": "string",
                  "format": "uri"
                },
                "examples": {
                  "302ExpiredRefreshToken": {
                    "description": "Success URI when user is registered.",
                    "value": "www.<UIEndpoint>/registered/d3fe5c6959ae0ce502d6027a7693c3ebe4543f51a878d60004e133172"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "description": "Create user",
        "operationId": "createUser",
        "responses": {
          "201": {
            "description": "Return newly created User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing token and email."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Returns all users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Return all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "example": [
                    {
                      "id": 2,
                      "slug": "second-user",
                      "first_name": "second",
                      "last_name": "last",
                      "full_name": "Second User",
                      "email": "second@email.com",
                      "avatar": "image.jpg",
                      "following_count": 3,
                      "follower_count": 4,
                      "role": "user",
                      "enabled": true,
                      "locked": false
                    },
                    {
                      "id": 5,
                      "slug": "firth-user",
                      "first_name": "fifth",
                      "last_name": "last",
                      "full_name": "Fifth User",
                      "email": "fifth@email.com",
                      "avatar": "image.jpg",
                      "following_count": 0,
                      "follower_count": 1,
                      "role": "user",
                      "enabled": true,
                      "locked": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No users found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No users found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "description": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of user to delete",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return success status message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User has been deleted."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find user By ID",
        "description": "Returns a single user",
        "operationId": "getUserByID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of user to return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": 1,
                  "slug": "first-user",
                  "first_name": "first",
                  "last_name": "user",
                  "full_name": "First User",
                  "email": "first@email.com",
                  "avatar": "image.jpg",
                  "following_count": 5,
                  "follower_count": 1,
                  "role": "user",
                  "enabled": true,
                  "locked": false
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No users found with that id [id]."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/name/{slug}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find user by slug",
        "description": "Returns a single user",
        "operationId": "getUserBySlug",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "slug of user to return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": 1,
                  "slug": "first-user",
                  "first_name": "first",
                  "last_name": "last",
                  "full_name": "First User",
                  "email": "first@email.com",
                  "avatar": "image.jpg",
                  "following_count": 5,
                  "follower_count": 1,
                  "role": "user",
                  "enabled": true,
                  "locked": false
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User with name [slug] was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/feed": {
      "get": {
        "tags": [
          "Feed"
        ],
        "summary": "Get user feed",
        "description": "Returns an array of feed items",
        "operationId": "getUserFeed",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of user to get feed of",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return feed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Feed"
                      },
                      {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "block": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/Block"
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "channels"
                                    ],
                                    "properties": {
                                      "channels": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/components/schemas/Channel"
                                            }
                                          ]
                                        },
                                        "example": [
                                          {
                                            "id": 2,
                                            "user": 5,
                                            "title": "Channel 8",
                                            "description": "example description",
                                            "slug": "channel-8",
                                            "follower_count": 7,
                                            "date_created": "2020-02-01T17:00:00.000Z",
                                            "date_updated": "2020-02-01T17:00:00.000Z"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "channel": {
                                "type": "object",
                                "items": {
                                  "$ref": "#/components/schemas/Channel"
                                },
                                "example": {
                                  "id": 2,
                                  "user": {
                                    "id": 1,
                                    "slug": "first-user",
                                    "first_name": "First",
                                    "last_name": "User",
                                    "full_name": "First User",
                                    "avatar": "image.jpg"
                                  },
                                  "title": "Channel 2",
                                  "description": "example description",
                                  "slug": "channel-2",
                                  "follower_count": 6,
                                  "date_created": "2020-02-01T17:00:00.000Z",
                                  "date_updated": "2020-02-01T17:00:00.000Z",
                                  "blocks": [],
                                  "users_following": []
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Feed could not be generated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Feed could not be generated."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/channels/connection/{id}": {
      "get": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Follow"
        ],
        "summary": "Check if user follows channel",
        "description": "Checks whether user follows channel",
        "operationId": "getUserFollowConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of channel to check connection",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return status object with boolean of true",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No connection, return status object with boolean of false",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{slug}/followers": {
      "get": {
        "tags": [
          "Follow"
        ],
        "summary": "Find all users that follows that user by slug",
        "description": "Returns all user following particular user",
        "operationId": "getUserFollowers",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "slug of user to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all users that follows them",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/UserFollowers"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "No user found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User with slug [slug] has no followers."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/connection/{id}": {
      "get": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Follow"
        ],
        "summary": "Check if user follows user",
        "description": "Checks whether user follows user",
        "operationId": "getUserFriendConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ID of user to check connection",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return status object with boolean of true",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No connection, return status object with boolean of false",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{slug}/friends": {
      "get": {
        "tags": [
          "Follow"
        ],
        "summary": "Find all users friends by slug",
        "description": "Returns all users they follow",
        "operationId": "getUserFriends",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "slug of user to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all users friends",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/UserFollowing"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "No user found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User with slug [${slug}] is not following anyone."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login user",
        "description": "Returns logged in user data",
        "operationId": "loginUser",
        "responses": {
          "200": {
            "description": "Return logged in user data",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "sid.cookie=abc12345; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User"
                    },
                    {
                      "type": "object",
                      "required": [
                        "token"
                      ],
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "token12345"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No users found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No users found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logout user",
        "description": "Destroy user session",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "Return success status boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/search/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Search users based on query",
        "description": "Returns relevant users",
        "operationId": "searchUserByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Keyword to search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return all relevant users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "example": [
                    {
                      "id": 2,
                      "slug": "second-user",
                      "first_name": "second",
                      "last_name": "last",
                      "full_name": "Second User",
                      "email": "second@email.com",
                      "avatar": "image.jpg",
                      "following_count": 3,
                      "follower_count": 4,
                      "role": "user",
                      "enabled": true,
                      "locked": false
                    },
                    {
                      "id": 5,
                      "slug": "firth-user",
                      "first_name": "fifth",
                      "last_name": "last",
                      "full_name": "Fifth User",
                      "email": "fifth@email.com",
                      "avatar": "image.jpg",
                      "following_count": 0,
                      "follower_count": 1,
                      "role": "user",
                      "enabled": true,
                      "locked": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found with particular keyword",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "No users found with that that title."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/registration": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Send token to user email",
        "description": "Sends token to user email",
        "operationId": "sendToken",
        "responses": {
          "200": {
            "description": "Return success status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 404
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing token or email."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Update User",
        "description": "Update user",
        "operationId": "updateUser",
        "responses": {
          "200": {
            "description": "Return update success message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User has been updated."
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to make changes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": 401
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, no log in session."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    }
  }
}